options:
  env:
    - "GOPATH=/go"
    - "BRANCH_NAME=${BRANCH_NAME}"
    - "PROJECT_ID=${PROJECT_ID}"
  volumes:
    - name: go-modules-pkg
      path: /go/pkg
    - name: go-modules-bin
      path: /go/bin
    - name: go-modules-src
      path: /go/src
  machineType: 'E2_HIGHCPU_8'
substitutions:
  _GCR_REPO_ENDPOINT: eu.gcr.io/sk-borislav/flexible:latest
  _VULNZ_CHECK_POLICY: .cloudbuild/docker/vulnerability_scan_policy.yaml
steps:
  - id: go_version
    name: "gcr.io/cloud-builders/go:debian"
    args: [ "version" ]

  - id: go_test
    name: "golang:1.19"
    args: ["go", "test", "./..."]

  - id: build_flexible_service
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-ce'
      - |
        docker build -t ${_GCR_REPO_ENDPOINT} -f Dockerfile .

  - id: push_flexible_service
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - -ce
      - |
        docker push ${_GCR_REPO_ENDPOINT}
        docker image inspect ${_GCR_REPO_ENDPOINT} --format '{{index .RepoDigests 0}}' > flexible-service-image-digest.txt
        cat flexible-service-image-digest.txt

  - id: sign_flexible_service
    name: 'eu.gcr.io/sk-borislav/ci-image-signer'
    env:
      - "DIGEST_FILENAME=flexible-service-image-digest.txt"
      - "VULNZ_CHECK_POLICY=${_VULNZ_CHECK_POLICY}"
      - "KMS_DIGEST_ALGORITHM=${_KMS_DIGEST_ALGORITHM}"
      - "KMS_KEY_NAME=${_KMS_KEY_NAME}"
      - "ATTESTOR_NAME=${_ATTESTOR_NAME}"

  - id: deploy_service
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -ce
      - |
        gcloud config set app/cloud_build_timeout 1600 
        gcloud app deploy --image-url=${_GCR_REPO_ENDPOINT} --appyaml=services/app-ae-flexible/app.yaml


timeout: 1800s
logsBucket: '${_CLOUD_BUILD_STORAGE_BUCKET}'
