options:
  env:
    - "GOPATH=/go"
    - "BRANCH_NAME=${BRANCH_NAME}"
    - "PROJECT_ID=${PROJECT_ID}"
  volumes:
    - name: go-modules-pkg
      path: /go/pkg
    - name: go-modules-bin
      path: /go/bin
    - name: go-modules-src
      path: /go/src
  machineType: 'E2_HIGHCPU_8'
substitutions:
  _FLEXIBLE_SERVICE_NAME: flexible-service
  _DIGEST_FILENAME: flexible-service-image-digest.txt
  _GCR_REPO_ENDPOINT: eu.gcr.io/sk-borislav
  _VULNZ_CHECK_POLICY: .cloudbuild/docker/vulnerability_scan_policy.yaml
steps:
  # See https://www.npmjs.com/package/editorconfig-checker
  # The .editorconfig file enforces formatting standards such as whether indents
  # should be tabs or spaces. Editors like VSCode will read the file and behave
  # according to the formatting defined in this file.
  - id: eclint
    name: "e53e225/editorconfig-checker"

  - id: go_version
    name: "gcr.io/cloud-builders/go:debian"
    args: [ "version" ]

  - id: go_linter
    name: "golangci/golangci-lint"
    args: ["golangci-lint", "run", "-v", "--build-tags", "test"]

  - id: go_test
    name: "golang:1.19"
    args: ["go", "test", "./..."]

  - id: go_security
    name: "securego/gosec"
    args: [ "./..." ]

  - id: build_flexible_service
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - -ce
      - |
        docker build -t ${_GCR_REPO_ENDPOINT}/${_FLEXIBLE_SERVICE_NAME} -f Dockerfile .

  - id: push_flexible_service
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - -ce
      - |
        docker push ${_GCR_REPO_ENDPOINT}/${_FLEXIBLE_SERVICE_NAME}
        docker image inspect ${_GCR_REPO_ENDPOINT}/${_FLEXIBLE_SERVICE_NAME} --format '{{index .RepoDigests 0}}' > ${_DIGEST_FILENAME}
        cat ${_DIGEST_FILENAME}

  - id: sign_flexible_service_image
    name: gcr.io/$PROJECT_ID/kritis-signer
    entrypoint: 'sh'
    args:
      - -ce
      - |
        /kritis/signer \
        -v=10 \
        -alsologtostderr \
        -image=$(/bin/cat $_DIGEST_FILENAME) \
        -policy=${_VULNZ_CHECK_POLICY} \
        -mode=check-only

  - id: deploy_service
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -ce
      - |
        gcloud config set app/cloud_build_timeout 1600 
        gcloud app deploy --image-url=${_GCR_REPO_ENDPOINT}/${_FLEXIBLE_SERVICE_NAME} --appyaml=services/app-ae-flexible/app.yaml

timeout: 1800s
logsBucket: '${_CLOUD_BUILD_STORAGE_BUCKET}'
